<?xml version="1.0"?>
<root>

	<!-- Apps -->
	<appdef>
		<appname>SUBLIME_TEXT_3</appname>
		<equal>com.sublimetext.3</equal>
	</appdef>


	<!-- Window Names -->
	<windownamedef>
		<name>Windows_VM</name>
		<regex>Windows VM</regex>
	</windownamedef>

	<windownamedef>
		<name>World_of_Warcraft</name>
		<regex>^World of Warcraft$</regex>
	</windownamedef>

	<windownamedef>
		<name>YouTube</name>
		<regex>YouTube</regex>
	</windownamedef>


	<!-- Devices -->
	<devicevendordef>
		<vendorname>Roccat_Lua</vendorname>
		<vendorid>0x1e7d</vendorid> 
	</devicevendordef>
	<deviceproductdef>
		<productname>Roccat_Lua</productname>
		<productid>0x2c2e</productid>
	</deviceproductdef>

	<devicevendordef>
		<vendorname>Tecknet</vendorname>
		<vendorid>0x062a</vendorid> 
	</devicevendordef>
	<deviceproductdef>
		<productname>Tecknet</productname>
		<productid>0x415e</productid>
	</deviceproductdef>

	<devicevendordef>
		<vendorname>Xcellon</vendorname>
		<vendorid>0x12c9</vendorid> 
	</devicevendordef>
	<deviceproductdef>
		<productname>Xcellon</productname>
		<productid>0x1001</productid>
	</deviceproductdef>

	<devicevendordef>
		<vendorname>Internal_Keyboard</vendorname>
		<vendorid>0x05ac</vendorid> 
	</devicevendordef>
	<deviceproductdef>
		<productname>Internal_Keyboard</productname>
		<productid>0x0273</productid>
	</deviceproductdef>

	<devicevendordef>
		<vendorname>Corsair_K70</vendorname>
		<vendorid>0x1b1c</vendorid> 
	</devicevendordef>
	<deviceproductdef>
		<productname>Corsair_K70</productname>
		<productid>0x1b07</productid>
	</deviceproductdef>









	<!-- Keyboards -->
	<item>
		<name>Keyboards</name>
		<!-- External Keyboard -->
		<item>
			<name>External Keyboard</name>
			<item>
				<name>Modifier Keys</name>
				<item>
					<name>Left Alt</name>
					<item>
						<name>Left Alt to Left Command</name>
						<identifier>ek.Left Alt = Left Command</identifier>
						<device_only>DeviceVendor::Corsair_K70, DeviceProduct::Corsair_K70</device_only>
						<autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L
						</autogen>
					</item>
				</item>

				<item>
					<name>Right Alt</name>
					<item>
						<name>Right Alt to Right Command</name>
						<identifier>ek.Right Alt = Right Command</identifier>
						<device_only>DeviceVendor::Corsair_K70, DeviceProduct::Corsair_K70</device_only>
						<autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::COMMAND_R
						</autogen>
					</item>
				</item>

				<item>
					<name>Left Windows</name>
					<item>
						<name>Left Windows to Left Option</name>
						<identifier>ek.Left Windows = OPTION_L</identifier>
						<device_only>DeviceVendor::Corsair_K70, DeviceProduct::Corsair_K70</device_only>
						<autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L
						</autogen>
					</item>
				</item>

				<item>
					<name>Right Windows</name>
					<item>
						<name>Right Windows to Right Option</name>
						<identifier>ek.Right Windows = OPTION_R</identifier>
						<device_only>DeviceVendor::Corsair_K70, DeviceProduct::Corsair_K70</device_only>
						<autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::OPTION_R
						</autogen>
					</item>
				</item>
			</item>

			<item>
				<name>Navigation Keys</name>
				<item>
					<name>Home</name>
					<item>
						<name>Home to Home on Mac [Command + Left Arrow]</name>
						<identifier>ek.HOME = HOME</identifier>
						<device_only>DeviceVendor::Corsair_K70, DeviceProduct::Corsair_K70</device_only>
						<autogen>__KeyToKey__ KeyCode::HOME, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_R</autogen>
					</item>
				</item>

				<item>
					<name>End</name>
					<item>
						<name>End to End on Mac [Command + Right Arrow]</name>
						<identifier>ek.END = END</identifier>
						<device_only>DeviceVendor::Corsair_K70, DeviceProduct::Corsair_K70</device_only>
						<autogen>__KeyToKey__ KeyCode::END, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_R</autogen>
					</item>
				</item>
			</item>
		</item> 
		<!-- External Keyboard -->


		<!-- Internal Keyboard -->
		<item>
			<name>Internal Keyboard</name>
			<!-- Modifier Keys -->
			<item>
				<name>Modifier Keys</name>
				<item>
					<name>Caps Lock (Seil remapped Caps Lock to Right Control)</name>
					<item>
						<name>Caps Lock to Right Control</name>
						<appendix>Caps Lock when pressed alone</appendix>
						<identifier>osx.CAPSLOCK = CONTROL_R (CAPSLOCK when pressed alone)</identifier>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>
							__KeyOverlaidModifier__
							KeyCode::CONTROL_R,
							KeyCode::CONTROL_R,
							KeyCode::CAPSLOCK
						</autogen>
					</item>

					<item>
						<name>Caps Lock to Right Control</name>
						<appendix>Caps Lock when double tapped</appendix>
						<identifier>private.Double tap CAPSLOCK = CAPSLOCK</identifier>

						<block>
							<!-- double tap -->
							<lastpressedphysicalkey_only>KeyCode::CONTROL_R</lastpressedphysicalkey_only>
							
							<!-- threshold is 300 ms -->
							<elapsedtimesincelastpressed_lessthan>Millisecond::RawValue::300</elapsedtimesincelastpressed_lessthan>

							<!-- Turn on Caps Lock by double tapping -->
							<block>
								<autogen>
									__KeyOverlaidModifier__
									KeyCode::CONTROL_R,
									@begin
									KeyCode::CONTROL_R,
									@end

									@begin
									KeyCode::CAPSLOCK,
									@end
								</autogen>
							</block>

							<!-- other double tap -->
							<block>
								<autogen>
									__KeyToKey__
									KeyCode::CONTROL_R,
									KeyCode::CONTROL_R,
								</autogen>
							</block>
						</block>

						<!-- Turn off Caps Lock with single tap -->
						<block>
							<modifier_only>ModifierFlag::CAPSLOCK</modifier_only>
							<autogen>
								__KeyOverlaidModifier__
								KeyCode::CONTROL_R,

								@begin
								KeyCode::CONTROL_R,
								@end

								@begin
								KeyCode::CAPSLOCK,
								@end
							</autogen>
						</block>
					</item>
				</item> 

				<item>
					<name>Left Command</name>
					<item>
						<name>Left Command to Left Control (Windows VM)</name>
						<identifier>windows_vm.command_left_to_control_left</identifier>
						<windowname_only>Windows_VM</windowname_only>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
					</item>
				</item>

				<item>
					<name>Right Command</name>
					<item>
						<name>Right Command to Right Control (Windows VM)</name>
						<identifier>windows_vm.command_right_to_control_right</identifier>
						<windowname_only>Windows_VM</windowname_only>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CONTROL_R</autogen>
					</item>

					<item>
						<name>Right Command to Right Option</name>
						<appendix>Command + Click when pressed alone</appendix>
						<windowname_not>Windows_VM</windowname_not>
						<identifier>osx.COMMAND_R = OPTION_R (Command Click when pressed alone)</identifier>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>
							__KeyOverlaidModifier__
							KeyCode::COMMAND_R,
							KeyCode::OPTION_R,
							PointingButton::LEFT, ModifierFlag::COMMAND_R
						</autogen>
					</item>

					<item>
						<name>Right Command retains functionality</name>
						<appendix>Command + Click when pressed alone</appendix>
						<windowname_not>Windows_VM</windowname_not>
						<identifier>osx.COMMAND_R = COMMAND_R (Command Click when pressed alone)</identifier>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>
							__KeyOverlaidModifier__
							KeyCode::COMMAND_R,
							KeyCode::COMMAND_R,
							PointingButton::LEFT, ModifierFlag::COMMAND_R
						</autogen>
					</item>
				</item>

				<item>
					<name>Right Option</name>
					<item>
						<name>Right Option to Right Command</name>
						<appendix>Close window [Command + w] when pressed alone</appendix>
						<identifier>osx.OPTION_R = COMMAND_R (Command + w when pressed alone)</identifier>
						<windowname_not>Windows_VM</windowname_not>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>
							__KeyOverlaidModifier__
							KeyCode::OPTION_R,
							KeyCode::COMMAND_R,
							KeyCode::W, ModifierFlag::COMMAND_R
						</autogen>
					</item>

					<item>
						<name>Right Option retains functionality</name>
						<appendix>Command + Click when pressed alone</appendix>
						<identifier>osx.OPTION_R = OPTION_R (Command Click when pressed alone)</identifier>
						<windowname_not>Windows_VM</windowname_not>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>
							__KeyOverlaidModifier__
							KeyCode::OPTION_R,
							KeyCode::OPTION_R,
							PointingButton::LEFT, ModifierFlag::COMMAND_R
						</autogen>
					</item>

					<item>
						<name>Right Option retains functionality</name>
						<appendix>Close window [Command + w] when pressed alone</appendix>
						<identifier>osx.OPTION_R = OPTION_R (Command + w when pressed alone)</identifier>
						<windowname_not>Windows_VM</windowname_not>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>
							__KeyOverlaidModifier__
							KeyCode::OPTION_R,
							KeyCode::OPTION_R,
							KeyCode::W, ModifierFlag::COMMAND_R
						</autogen>
					</item>

					<item>
						<name>Right Option retains functionality</name>
						<appendix>Switch to next window [Control + F4] when pressed alone</appendix>
						<identifier>osx.option_right_to_next_window</identifier>
						<windowname_not>Windows_VM</windowname_not>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>
							__KeyOverlaidModifier__
							KeyCode::OPTION_R,
							KeyCode::OPTION_R,
							KeyCode::F4, ModifierFlag::CONTROL_R
						</autogen>
					</item>
				</item>

				<item>
					<name>Left Shift</name>
					<item>
						<name>Left Shift retains functionality</name>
						<appendix>Caps Lock when double tapped</appendix>
						<identifier>private.Double tap SHIFT_L = CAPSLOCK</identifier>

						<block>
							<!-- double tap -->
							<lastpressedphysicalkey_only>KeyCode::SHIFT_L</lastpressedphysicalkey_only>

							<!-- threshold is 300 ms -->
							<elapsedtimesincelastpressed_lessthan>Millisecond::RawValue::300</elapsedtimesincelastpressed_lessthan>

							<!-- Turn on CAPSLOCK with double shift presses-->
							<block>
								<autogen>
									__KeyOverlaidModifier__
									KeyCode::SHIFT_L,
									@begin
									KeyCode::SHIFT_L,
									@end

									@begin
									KeyCode::CAPSLOCK,
									@end
								</autogen>
							</block>

							<!-- other double -->
							<block>
								<autogen>
									__KeyToKey__
									KeyCode::SHIFT_L,
									KeyCode::SHIFT_L,
								</autogen>
							</block>
						</block>

						<!-- Turn off CAPSLOCK with single left shift -->
						<block>
							<modifier_only>ModifierFlag::CAPSLOCK</modifier_only>
							<autogen>
								__KeyOverlaidModifier__
								KeyCode::SHIFT_L,

								@begin
								KeyCode::SHIFT_L,
								@end

								@begin
								KeyCode::CAPSLOCK,
								@end
							</autogen>
						</block>
					</item> <!-- Double tap SHIFT_L -->
				</item> <!-- SHIFT_L -->

				<item>
					<name>Right Shift</name>
					<item>
						<name>Right Shift retains functionality</name>
						<appendix>Change input source [Command + Option + Shift + Space] when double tapped</appendix>
						<identifier>private.Double tap SHIFT_R = CAPSLOCK</identifier>

						<block>
							<!-- double tap -->
							<lastpressedphysicalkey_only>KeyCode::SHIFT_R</lastpressedphysicalkey_only>

							<!-- threshold is 500 ms -->
							<elapsedtimesincelastpressed_lessthan>Millisecond::RawValue::300</elapsedtimesincelastpressed_lessthan>

							<!-- Turn on CAPSLOCK with double shift presses-->
							<block>
								<autogen>
									__KeyOverlaidModifier__
									KeyCode::SHIFT_R,
									@begin
									KeyCode::SHIFT_R,
									@end

									@begin
									KeyCode::SPACE, ModifierFlag::COMMAND_R | ModifierFlag::OPTION_R | ModifierFlag::SHIFT_R
									@end
								</autogen>
							</block>

							<!-- other double -->
							<block>
								<autogen>
									__KeyToKey__
									KeyCode::SHIFT_R,
									KeyCode::SHIFT_R,
								</autogen>
							</block>
						</block>

						<!-- Turn off CAPSLOCK with single left shift -->
						<block>
							<modifier_only>ModifierFlag::CAPSLOCK</modifier_only>
							<autogen>
								__KeyOverlaidModifier__
								KeyCode::SHIFT_R,

								@begin
								KeyCode::SHIFT_R,
								@end

								@begin
								KeyCode::CAPSLOCK,
								@end
							</autogen>
						</block>
					</item>
				</item>

				<item>
					<name>Sequential Left + Right Shift</name>
					<item>
						<name>Sequential [Left + Right Shift] to Caps Lock</name>
						<identifier>osx.Sequential Left + Right Shift = CAPSLOCK</identifier>
						<autogen>__KeyToKey__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, ModifierFlag::EXTRA1</autogen>
						<autogen>__KeyToKey__ KeyCode::SHIFT_R, ModifierFlag::EXTRA1, KeyCode::CAPSLOCK</autogen>
					</item>
				</item>
			</item> 
			<!-- Modifier Keys -->


			<item>
				<name>Keyboard Shortcuts</name>
				<item>
					<name>Command + 1</name>
					<item>
						<name>Command + 1 to go to previous tab (Chromium browsers)</name>
						<identifier>osx.command_left_1_to_tab_previous_in_chromium</identifier>
						<windowname_not>Windows_VM</windowname_not>
						<only>GOOGLE_CHROME, OPERA</only>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>__KeyToKey__
							KeyCode::1, ModifierFlag::COMMAND_L,
							KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L
						</autogen>
					</item> <!-- Chromium -->

					<item>
						<name>Command + 1 to go to previous tab (Safari)</name>
						<identifier>osx.command_left_1_to_tab_previous_in_safari</identifier>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<windowname_not>Windows_VM</windowname_not>
						<only>SAFARI</only>
						<autogen>__KeyToKey__ 
							KeyCode::1, ModifierFlag::COMMAND_L,
							KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
						</autogen>
					</item> <!-- Safari -->

					<item>
						<name>Command + 1 to go to previous tab (Sublime Text)</name>
						<identifier>osx.command_left_1_to_tab_previous_in_sublime</identifier>
						<windowname_not>Windows_VM</windowname_not>
						<only>SUBLIME_TEXT_3</only>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>__KeyToKey__ 
							KeyCode::1, ModifierFlag::COMMAND_L,
							KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L
						</autogen>
					</item> <!-- Sublime Text -->

					<item>
						<name>Command + 1 to go to previous tab (Terminal)</name>
						<identifier>osx.command_left_1_to_tab_previous_in_terminal</identifier>
						<only>TERMINAL</only>
						<windowname_not>Windows_VM</windowname_not>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>__KeyToKey__ 
							KeyCode::1, ModifierFlag::COMMAND_L,
							KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
						</autogen>
					</item> <!-- Terminal -->
				</item> 
				<!-- Command + 1 -->

				<item>
					<name>Command + 2</name>
					<item>
						<name>Command + 2 to go to next tab (Chromium browsers)</name>
						<identifier>osx.command_left_2_to_tab_next_in_chromium</identifier>
						<windowname_not>Windows_VM</windowname_not>
						<only>GOOGLE_CHROME, OPERA</only>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>  
						<autogen>__KeyToKey__ 
							KeyCode::2, ModifierFlag::COMMAND_L,
							KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L
						</autogen>
					</item> <!-- Chromium -->

					<item>
						<name>Command + 2 to go to next tab (Safari)</name>
						<identifier>osx.command_left_2_to_tab_next_in_safari</identifier>
						<windowname_not>Windows_VM</windowname_not>
						<only>SAFARI</only>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>
						<autogen>__KeyToKey__ 
							KeyCode::2, ModifierFlag::COMMAND_L,
							KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
						</autogen>
					</item> <!-- Safari -->

					<item>
						<name>Command + 2 to go to next tab (Sublime Text)</name>
						<identifier>osx.command_left_2_to_tab_next_in_sublime</identifier>
						<windowname_not>Windows_VM</windowname_not>
						<only>SUBLIME_TEXT_3</only>
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>          
						<autogen>__KeyToKey__ 
							KeyCode::2, ModifierFlag::COMMAND_L,
							KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L
						</autogen>
					</item> <!-- Sublime Text -->

					<item>
						<name>Command + 2 to go to next tab (Terminal)</name>
						<identifier>osx.command_left_2_to_tab_next_in_terminal</identifier>
						<windowname_not>Windows_VM</windowname_not>
						<only>TERMINAL</only>          
						<device_only>DeviceVendor::Internal_Keyboard, DeviceProduct::Internal_Keyboard</device_only>     
						<autogen>__KeyToKey__ 
							KeyCode::2, ModifierFlag::COMMAND_L,
							KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
						</autogen>
					</item> <!-- Terminal -->
				</item> 
				<!-- Command + 2 -->

				<item>
					<name>Command + L</name>
					<item>
						<name>Command + L to sleep mac [Control + Shift + Power]</name>
						<identifier>osx.command_l_to_sleep_mac</name>
						<autogen>__KeyToKey__
							KeyCode::L, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | ModifierFlag::NONE,
							ConsumerKeyCode::POWER, ModifierFlag::CONTROL_R | ModifierFlag::SHIFT_R
						</autogen>
					</item>
				</item>

				<item>
					<name>Option + L</name>
					<item>
						<name>Option + L to sleep mac [Control + Shift + Power]</name>
						<identifier>osx.option_l_to_sleep_mac</name>
						<autogen>__KeyToKey__
							KeyCode::L, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, ModifierFlag::NONE,
							ConsumerKeyCode::POWER, ModifierFlag::CONTROL_R | ModifierFlag::SHIFT_R
						</autogen>
					</item>
				</item>

				<item>
			  		<name>Text Editing</name>

			  		<item>
			  			<name>Control + Backslash to forward delete word [Option + Foward Delete]</name>
			  			<identifier>sk.Command + \ = Option + FORWARD_DELETE</identifier>
			  			<autogen>__KeyToKey__
			  				KeyCode::BACKSLASH, ModifierFlag::CONTROL_R | ModifierFlag::NONE,
			  				KeyCode::FORWARD_DELETE, ModifierFlag::OPTION_R,
			  			</autogen>
			  		</item>

			  		<item>
			  			<name>Control + Delete to delete word [Option + Delete]</name>
			  			<identifier>sk.Command + DELETE = Option + DELETE</identifier>
			  			<autogen>__KeyToKey__
			  				KeyCode::DELETE, ModifierFlag::CONTROL_R | ModifierFlag::NONE,
			  				KeyCode::DELETE, ModifierFlag::OPTION_R,
			  			</autogen>
			  		</item>

			  		<item>
			  			<name>Control + J to delete current word</name>
			  			<identifier>sk.Command + J = DELETE Word</identifier>
			  			<autogen>__KeyToKey__
			  				KeyCode::J, ModifierFlag::CONTROL_R | ModifierFlag::NONE,
			  				KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_R,
			  				KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_R | ModifierFlag::SHIFT_R,
			  				KeyCode::FORWARD_DELETE,
			  				Option::NOREPEAT
			  			</autogen>
			  		</item>

			  		<item>
			  			<name>Control + K to delete current line</name>
			  			<identifier>sk.Command + K = DELETE Line</identifier>
			  			<autogen>__KeyToKey__
			  				KeyCode::K, ModifierFlag::CONTROL_R | ModifierFlag::NONE,
			  				KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_R,
			  				KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_R | ModifierFlag::SHIFT_R,
			  				KeyCode::FORWARD_DELETE,
			  				Option::NOREPEAT
			  			</autogen>
			  		</item>
			  	</item>
			</item> <!-- Keyboard Shortcuts -->
		</item> <!-- Internal Keyboard -->
	</item>









  	<!-- Mouse -->
	<item>
		<name>Mouse</name>
		<item>
			<name>Middle Click</name>
			<item>
				<name>Middle Click to to go to previous page [Command + Left Bracket]</name>
				<identifier>mouse.middle_click_to_page_back</identifier>
				<windowname_not>World_of_Warcraft</windowname_not>
				<autogen>__KeyToKey__ PointingButton::MIDDLE, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L</autogen>
			</item>
		</item> <!-- Middle Click -->

		<item>
			<name>Sequential Left + Right Click</name>
			<item>
				<name>Sequential [Left + Right Click] to go to previous page [Command + Left Bracket]</name>
				<identifier>mouse.Sequential Left + Right Click = Page Back</identifier>
				<autogen>__KeyToKey__ PointingButton::LEFT, PointingButton::LEFT, ModifierFlag::EXTRA1</autogen>
				<autogen>__KeyToKey__ PointingButton::RIGHT, ModifierFlag::EXTRA1, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L</autogen>
			</item>
		</item> <!-- Sequential Left Click + Right Click -->

		<item>
			<name>Simultaneous Left + Right Click</name>
			<item>
				<name>Simultaneous [Left + Right Click] to close window [Command + w]</name>
				<identifier>mouse.Simultaneous Left + Right Click = Command + W</identifier>
				<windowname_not>World_of_Warcraft</windowname_not>
				<autogen>__SimultaneousKeyPresses__
					@begin PointingButton::LEFT, PointingButton::RIGHT,
					@end KeyCode::W, ModifierFlag::COMMAND_L
				</autogen>
			</item>
		</item> <!-- Simultaneous Left Click + Right Click -->

		<item>
			<name>Scrolling</name>
			<item>
				<name>Reverse scrolling direction for mouse (trackpad is still natural)</name>
				<identifier>mouse.Scrolling = Reversed (Trackpad Is Still Natural)</identifier>
				<!-- <device_only>DeviceVendor::Roccat_Lua, DeviceProduct::Roccat_Lua</device_only>  -->
				<device_only>DeviceVendor::Tecknet, DeviceProduct::Tecknet</device_only> 
				<autogen>__FlipScrollWheel__ Option::FLIPSCROLLWHEEL_VERTICAL</autogen>
			</item>
		</item>
	</item> 
	<!-- Mouse -->









  	<!-- World of Warcraft -->
	<item>
		<name>World of Warcraft</name>
		<item>
			<name>Reverse trackpad scrolling direction</name>
			<identifier>trackpad.Reverse Trackpad Scrolling Direction</identifier>
			<windowname_only>World_of_Warcraft</windowname_only>
			<autogen>__FlipScrollWheel__ Option::FLIPSCROLLWHEEL_VERTICAL</autogen>
		</item>
	</item> <!-- World of Warcraft -->  
</root>

